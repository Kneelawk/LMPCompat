plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

String modVersion
if (System.getenv("RELEASE_TAG") != null) {
    String releaseTag = System.getenv("RELEASE_TAG")
    modVersion = releaseTag.substring(1)
    println("Detected Release Version: $modVersion")
} else {
    modVersion = project.mod_version
    println("Detected Local Version: $modVersion")
}

archivesBaseName = project.archives_base_name
version = modVersion
group = project.maven_group

repositories {
    maven {
        name "AlexIIL"
        url "https://alexiil.uk/maven/"
    }
    maven {
        name "Kneelawk"
        url "https://kneelawk.com/maven/"
    }

    // Create stuff
    maven {
        name "Create"
        url "https://mvn.devos.one/snapshots/"
    }
    maven {
        name "Ladysnake"
        url "https://ladysnake.jfrog.io/artifactory/mods"
    }
    maven {
        name "Flywheel"
        url "https://maven.tterrag.com/"
    }
    maven {
        name "TeraformersMC"
        url "https://maven.terraformersmc.com/"
    }
//    maven {
//        // for Fake Player API
//        name "Cafeteria"
//        url "https://maven.cafeteria.dev/releases/"
//        allowInsecureProtocol = true
//    }
    maven {
        // for Reach Entity Attributes
        url "https://maven.jamieswhiteshirt.com/libs-release"
    }
    maven {
        name "JitPack"
        url "https://jitpack.io/"
        content {
            includeGroup("com.github.AlphaMode")
            includeGroup("com.github.Chocohead")
            includeGroup("com.github.Draylar.omega-config")
            includeGroup("com.github.LlamaLad7")
            includeGroup("com.github.llamalad7.mixinextras")
        }
    }
    maven {
        name "Modrinth"
        url "https://api.modrinth.com/maven"
        content {
            includeGroup("maven.modrinth")
        }
    }
    maven {
        // for Forge Config API Port
        name "Cursemaven"
        url "https://cursemaven.com"
        content {
            includeGroup("curse.maven")
        }
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modCompileOnly "net.fabricmc:fabric-loader:${project.loader_version}"
    modLocalRuntime "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modCompileOnly "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modLocalRuntime "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // LMP
    modImplementation("alexiil.mc.lib:libmultipart-all:${project.lmp_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }

    // Create
    modCompileOnly("com.simibubi.create:create-fabric-${project.minecraft_version}:${project.createVersion}") {
        exclude group: "net.fabricmc.fabric-api"
    }

    // Runtime

    // Create
    modLocalRuntime("com.simibubi.create:create-fabric-${project.minecraft_version}:${project.createVersion}") {
        exclude group: "net.fabricmc.fabric-api"
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        if (System.getenv("PUBLISH_REPO") != null) {
            maven {
                name = "publishRepo"
                url = uri(System.getenv("PUBLISH_REPO"))
            }
        }
    }
}
